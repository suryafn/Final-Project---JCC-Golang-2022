definitions:
  controllers.LoginInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  controllers.RegisterInput:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  controllers.productCategoryInput:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  controllers.productInput:
    properties:
      product_category_id:
        type: integer
      title:
        type: string
      year:
        type: integer
    type: object
  models.Product:
    properties:
      created_at:
        type: string
      id:
        type: integer
      productCategoryID:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      year:
        type: integer
    type: object
  models.ProductCategory:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
paths:
  /login:
    post:
      description: Logging in to get jwt token to access admin or user api by roles.
      parameters:
      - description: the body to login a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Login as as user.
      tags:
      - Auth
  /product-categories:
    get:
      description: Get a list of ProductCategory.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ProductCategory'
            type: array
      security:
      - BearerToken: []
      summary: Get all ProductCategory.
      tags:
      - ProductCategory
    post:
      description: Creating a new ProductCategory.
      parameters:
      - description: the body to create a new ProductCategory
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.productCategoryInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProductCategory'
      security:
      - BearerToken: []
      summary: Create New ProductCategory.
      tags:
      - ProductCategory
  /product-categories/{id}:
    delete:
      description: Delete a ProductCategory by id.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: ProductCategory id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete one ProductCategory.
      tags:
      - ProductCategory
    get:
      description: Get an ProductCategory by id.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: ProductCategory id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProductCategory'
      security:
      - BearerToken: []
      summary: Get ProductCategory.
      tags:
      - ProductCategory
    patch:
      description: Update ProductCategory by id.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: ProductCategory id
        in: path
        name: id
        required: true
        type: string
      - description: the body to update age product category
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.productCategoryInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProductCategory'
      security:
      - BearerToken: []
      summary: Update ProductCategory.
      tags:
      - ProductCategory
  /product-categories/{id}/movies:
    get:
      description: Get all Movies by AgeRatingCategoryId.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: ProductCategory id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
      security:
      - BearerToken: []
      summary: Get Movies.
      tags:
      - ProductCategory
  /product/{id}:
    delete:
      description: Delete a product by id.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: product id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete one product.
      tags:
      - Product
  /products:
    get:
      description: Get a list of Products.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
      security:
      - BearerToken: []
      summary: Get all products.
      tags:
      - Product
    post:
      description: Creating a new Product.
      parameters:
      - description: the body to create a new product
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.productInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
      security:
      - BearerToken: []
      summary: Create New Product.
      tags:
      - Product
  /products/{id}:
    get:
      description: Get a Product by id.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: product id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
      security:
      - BearerToken: []
      summary: Get Product.
      tags:
      - Product
    patch:
      description: Update product by id.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: product id
        in: path
        name: id
        required: true
        type: string
      - description: the body to update an product
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.productInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
      security:
      - BearerToken: []
      summary: Update Product.
      tags:
      - Product
  /register:
    post:
      description: registering a user from public access.
      parameters:
      - description: the body to register a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.RegisterInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Register a user.
      tags:
      - Auth
swagger: "2.0"
